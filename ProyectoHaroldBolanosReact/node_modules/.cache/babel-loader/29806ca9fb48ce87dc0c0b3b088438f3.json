{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orlando\\\\Desktop\\\\Proyecto Harold Bolanos React\\\\ProyectoHaroldBolanosReact\\\\lista_tareas\\\\src\\\\App\\\\index.js\",\n    _s4 = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { Encabezado } from '../Encabezado/';\nimport { BarraBusqueda } from '../BarraBusqueda/';\nimport { ListaTareas } from '../ListaTareas/';\nimport { Tarea } from '../Tarea/'; //   function useSearch(tareas){\n//     //Hooks de React para interactuar con el DOM\n//     const [valorBuscado, buscarTarea] = React.useState('')\n//     //Comportamiento de busqueda\n//     let tareasBuscadas = []\n//     if(valorBuscado.length<=0){\n//       tareasBuscadas = tareas\n//     }else{\n//       tareasBuscadas = tareas.filter(\n//         tarea => {\n//           const textoTarea = tarea.texto.toLowerCase()\n//           const textoBuscado = valorBuscado.toLowerCase()\n//           return textoTarea.includes(textoBuscado)\n//         }\n//       )\n//     }\n//     return [valorBuscado, tareasBuscadas, buscarTarea]\n//   }\n//   function useGetBtc(){\n//     const [data, obtenerData] = React.useState(null)\n//     const consultar = async() => {\n//       const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json')\n//       const respuesta = await peticion.json()\n//       obtenerData(respuesta)\n//     }\n//     React.useEffect(()=>{\n//       consultar()\n//     }, [])\n//     return data.bpi.USD.rate\n//   }\n// function useCookies(nombreCookie, contenidoCookie){\n//   const almacenamientoLocal = localStorage.getItem(nombreCookie)\n//   let elementoGuardado\n//   if(!almacenamientoLocal){\n//     //No hay una cookie guardada con el nombre dado\n//     const elementoSerializado = JSON.stringify(contenidoCookie)//Serialization\n//     localStorage.setItem(nombreCookie, elementoSerializado)//En esta linea se crea la cookie\n//     elementoGuardado = contenidoCookie //\n//   }else{\n//     //Existe una cookie con el nombre dado que ya tiene tareas\n//     elementoGuardado = JSON.parse(almacenamientoLocal)//Deserialization\n//   }\n//   const [elemento, setElemento] = React.useState(elementoGuardado)\n//   const guardar = (elementos) =>{\n//     if(elementos.length <= 0){\n//       localStorage.removeItem(nombreCookie)\n//     }else{\n//       const elementosSerializados = JSON.stringify(elementos)\n//       localStorage.setItem(nombreCookie, elementosSerializados)\n//     }\n//     setElemento(elementos)\n//   }\n//   return [elemento, guardar]\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s4();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$();\n\n  //Uso de custom hooks\n  const [tareas, guardar] = useCookies(nombreLista, contenidoLista);\n  const [valorBuscado, tareasBuscadas, buscarTarea] = useSearch(tareas);\n  const btc = useGetBtc();\n  const tareasCompletadas = tareas.filter(tarea => tarea.completada).length;\n  const totalTareas = tareas.length;\n\n  const completar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista[indice].completada = !nuevaLista[indice].completada;\n    guardar(nuevaLista);\n  };\n\n  const borrar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista.splice(indice, 1);\n    guardar(nuevaLista);\n  };\n\n  function useSearch(tareas) {\n    _s();\n\n    //Hooks de React para interactuar con el DOM\n    const [valorBuscado, buscarTarea] = React.useState(''); //Comportamiento de busqueda\n\n    let tareasBuscadas = [];\n\n    if (valorBuscado.length <= 0) {\n      tareasBuscadas = tareas;\n    } else {\n      tareasBuscadas = tareas.filter(tarea => {\n        const textoTarea = tarea.texto.toLowerCase();\n        const textoBuscado = valorBuscado.toLowerCase();\n        return textoTarea.includes(textoBuscado);\n      });\n    }\n\n    return [valorBuscado, tareasBuscadas, buscarTarea];\n  }\n\n  _s(useSearch, \"9OAVtFRjP1BEDFV/xs7VpWMgNcI=\");\n\n  function useGetBtc() {\n    _s2();\n\n    const [data, obtenerData] = React.useState(null);\n\n    const consultar = async () => {\n      const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json');\n      const respuesta = await peticion.json();\n      obtenerData(respuesta);\n    };\n\n    React.useEffect(() => {\n      consultar();\n    }, []);\n    return data.bpi.USD.rate;\n  }\n\n  _s2(useGetBtc, \"DVsll8/bw6XTzNnceTi8II54wtc=\");\n\n  function useCookies(nombreCookie, contenidoCookie) {\n    _s3();\n\n    const almacenamientoLocal = localStorage.getItem(nombreCookie);\n    let elementoGuardado;\n\n    if (!almacenamientoLocal) {\n      //No hay una cookie guardada con el nombre dado\n      const elementoSerializado = JSON.stringify(contenidoCookie); //Serialization\n\n      localStorage.setItem(nombreCookie, elementoSerializado); //En esta linea se crea la cookie\n\n      elementoGuardado = contenidoCookie; //\n    } else {\n      //Existe una cookie con el nombre dado que ya tiene tareas\n      elementoGuardado = JSON.parse(almacenamientoLocal); //Deserialization\n    }\n\n    const [elemento, setElemento] = React.useState(elementoGuardado);\n\n    const guardar = elementos => {\n      if (elementos.length <= 0) {\n        localStorage.removeItem(nombreCookie);\n      } else {\n        const elementosSerializados = JSON.stringify(elementos);\n        localStorage.setItem(nombreCookie, elementosSerializados);\n      }\n\n      setElemento(elementos);\n    };\n\n    return [elemento, guardar];\n  }\n\n  _s3(useCookies, \"2mUim7cXlfVo3EJS0pPExs6Ango=\");\n\n  return /*#__PURE__*/_jsxDEV(UI, {\n    btc: btc,\n    tareasCompletadas: tareasCompletadas,\n    totalTareas: totalTareas,\n    valorBuscado: valorBuscado,\n    buscarTarea: buscarTarea,\n    tareasBuscadas: tareasBuscadas,\n    completar: completar,\n    borrar: borrar,\n    nombreDelAutor: nombreDelAutor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 3\n  }, this);\n\n  function UI({\n    btc,\n    tareasCompletadas,\n    totalTareas,\n    valorBuscado,\n    buscarTarea,\n    tareasBuscadas,\n    completar,\n    borrar,\n    nombreDelAutor\n  }) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Encabezado, {\n        completadas: tareasCompletadas,\n        total: totalTareas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BarraBusqueda, {\n        valorBusqueda: valorBuscado,\n        funcionBuscar: buscarTarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Valor de 1 Bitcoin: \", btc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this), tareasBuscadas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n          texto: tarea.texto,\n          completada: tarea.completada,\n          onComplete: () => completar(tarea.texto),\n          onDelete: () => borrar(tarea.texto)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Autor: \", nombreDelAutor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 3\n    }, this);\n  }\n}\n\n_s4(App, \"f6LRiuRhMpMKYLmARNAd+To40P4=\", false, function () {\n  return [useCookies, useSearch, useGetBtc];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Orlando/Desktop/Proyecto Harold Bolanos React/ProyectoHaroldBolanosReact/lista_tareas/src/App/index.js"],"names":["React","Encabezado","BarraBusqueda","ListaTareas","Tarea","App","tareas","guardar","useCookies","nombreLista","contenidoLista","valorBuscado","tareasBuscadas","buscarTarea","useSearch","btc","useGetBtc","tareasCompletadas","filter","tarea","completada","length","totalTareas","completar","texto","indice","findIndex","nuevaLista","borrar","splice","useState","textoTarea","toLowerCase","textoBuscado","includes","data","obtenerData","consultar","peticion","fetch","respuesta","json","useEffect","bpi","USD","rate","nombreCookie","contenidoCookie","almacenamientoLocal","localStorage","getItem","elementoGuardado","elementoSerializado","JSON","stringify","setItem","parse","elemento","setElemento","elementos","removeItem","elementosSerializados","nombreDelAutor","UI","map"],"mappings":"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","sourcesContent":["import './App.css'\nimport React from 'react'\nimport { Encabezado } from '../Encabezado/'\nimport { BarraBusqueda } from '../BarraBusqueda/'\nimport { ListaTareas} from '../ListaTareas/'\nimport { Tarea } from '../Tarea/'\n\n\n//   function useSearch(tareas){\n//     //Hooks de React para interactuar con el DOM\n//     const [valorBuscado, buscarTarea] = React.useState('')\n\n//     //Comportamiento de busqueda\n//     let tareasBuscadas = []\n//     if(valorBuscado.length<=0){\n//       tareasBuscadas = tareas\n//     }else{\n//       tareasBuscadas = tareas.filter(\n//         tarea => {\n//           const textoTarea = tarea.texto.toLowerCase()\n//           const textoBuscado = valorBuscado.toLowerCase()\n//           return textoTarea.includes(textoBuscado)\n//         }\n//       )\n//     }\n//     return [valorBuscado, tareasBuscadas, buscarTarea]\n//   }\n  \n//   function useGetBtc(){\n//     const [data, obtenerData] = React.useState(null)\n\n//     const consultar = async() => {\n//       const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json')\n//       const respuesta = await peticion.json()\n//       obtenerData(respuesta)\n//     }\n\n//     React.useEffect(()=>{\n//       consultar()\n//     }, [])\n\n//     return data.bpi.USD.rate\n    \n//   }\n  \n// function useCookies(nombreCookie, contenidoCookie){\n//   const almacenamientoLocal = localStorage.getItem(nombreCookie)\n//   let elementoGuardado\n\n//   if(!almacenamientoLocal){\n//     //No hay una cookie guardada con el nombre dado\n//     const elementoSerializado = JSON.stringify(contenidoCookie)//Serialization\n//     localStorage.setItem(nombreCookie, elementoSerializado)//En esta linea se crea la cookie\n//     elementoGuardado = contenidoCookie //\n//   }else{\n//     //Existe una cookie con el nombre dado que ya tiene tareas\n//     elementoGuardado = JSON.parse(almacenamientoLocal)//Deserialization\n//   }\n//   const [elemento, setElemento] = React.useState(elementoGuardado)\n//   const guardar = (elementos) =>{\n//     if(elementos.length <= 0){\n//       localStorage.removeItem(nombreCookie)\n//     }else{\n//       const elementosSerializados = JSON.stringify(elementos)\n//       localStorage.setItem(nombreCookie, elementosSerializados)\n//     }\n//     setElemento(elementos)\n//   }\n//   return [elemento, guardar]\n// }\n\n  function App(){  \n    \n    //Uso de custom hooks\n    const[tareas, guardar] = useCookies(nombreLista, contenidoLista)\n    const[valorBuscado, tareasBuscadas, buscarTarea] = useSearch(tareas)\n    \n    const btc = useGetBtc()\n\n    const tareasCompletadas = tareas.filter(tarea => tarea.completada).length\n    const totalTareas = tareas.length\n\n    const completar = (texto) =>{\n      const indice = tareas.findIndex(tarea => tarea.texto == texto)\n      const nuevaLista = [...tareas]\n      nuevaLista[indice].completada = !nuevaLista[indice].completada\n      guardar(nuevaLista)\n    }\n\n    const borrar = (texto) =>{\n      const indice = tareas.findIndex(tarea => tarea.texto == texto)\n      const nuevaLista = [...tareas]\n      nuevaLista.splice(indice,1)\n      guardar(nuevaLista)\n    }\n\n    function useSearch(tareas){\n      //Hooks de React para interactuar con el DOM\n      const [valorBuscado, buscarTarea] = React.useState('')\n  \n      //Comportamiento de busqueda\n      let tareasBuscadas = []\n      if(valorBuscado.length<=0){\n        tareasBuscadas = tareas\n      }else{\n        tareasBuscadas = tareas.filter(\n          tarea => {\n            const textoTarea = tarea.texto.toLowerCase()\n            const textoBuscado = valorBuscado.toLowerCase()\n            return textoTarea.includes(textoBuscado)\n          }\n        )\n      }\n      return [valorBuscado, tareasBuscadas, buscarTarea]\n    }\n    \n    function useGetBtc(){\n      const [data, obtenerData] = React.useState(null)\n  \n      const consultar = async() => {\n        const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json')\n        const respuesta = await peticion.json()\n        obtenerData(respuesta)\n      }\n  \n      React.useEffect(()=>{\n        consultar()\n      }, [])\n  \n      return data.bpi.USD.rate\n      \n    }\n    \n  function useCookies(nombreCookie, contenidoCookie){\n    const almacenamientoLocal = localStorage.getItem(nombreCookie)\n    let elementoGuardado\n  \n    if(!almacenamientoLocal){\n      //No hay una cookie guardada con el nombre dado\n      const elementoSerializado = JSON.stringify(contenidoCookie)//Serialization\n      localStorage.setItem(nombreCookie, elementoSerializado)//En esta linea se crea la cookie\n      elementoGuardado = contenidoCookie //\n    }else{\n      //Existe una cookie con el nombre dado que ya tiene tareas\n      elementoGuardado = JSON.parse(almacenamientoLocal)//Deserialization\n    }\n    const [elemento, setElemento] = React.useState(elementoGuardado)\n    const guardar = (elementos) =>{\n      if(elementos.length <= 0){\n        localStorage.removeItem(nombreCookie)\n      }else{\n        const elementosSerializados = JSON.stringify(elementos)\n        localStorage.setItem(nombreCookie, elementosSerializados)\n      }\n      setElemento(elementos)\n    }\n    return [elemento, guardar]\n  }\n  \n\n\nreturn(\n  <UI\n  btc={btc}\n  tareasCompletadas={tareasCompletadas}\n  totalTareas={totalTareas}\n  valorBuscado={valorBuscado}\n  buscarTarea={buscarTarea}\n  tareasBuscadas={tareasBuscadas}\n  completar={completar}\n  borrar={borrar}\n  nombreDelAutor={nombreDelAutor}\n  />\n)\n\nfunction UI({\n  btc,\n  tareasCompletadas,\n  totalTareas,\n  valorBuscado,\n  buscarTarea,\n  tareasBuscadas,\n  completar,\n  borrar,\n  nombreDelAutor\n}){\n  \nreturn(\n  <React.Fragment>\n    <Encabezado\n    completadas={tareasCompletadas}\n    total={totalTareas}\n    />\n    <BarraBusqueda\n    valorBusqueda={valorBuscado}\n    funcionBuscar={buscarTarea}\n    />\n    <ListaTareas>\n    {<p>Valor de 1 Bitcoin: {btc}</p>}\n    {tareasBuscadas.map(tarea =>(\n      <Tarea\n      texto={tarea.texto}\n      completada={tarea.completada}\n      onComplete={()=>completar(tarea.texto)}\n      onDelete={()=>borrar(tarea.texto)}\n      />\n    ))}\n    </ListaTareas>\n    <p>Autor: {nombreDelAutor}</p>\n    </React.Fragment>\n)\n\n\n  \n}\n\n\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}