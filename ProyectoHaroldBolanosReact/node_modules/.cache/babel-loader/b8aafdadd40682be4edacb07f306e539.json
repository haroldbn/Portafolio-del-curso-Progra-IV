{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orlando\\\\Documents\\\\ProyectoHaroldBolanosReact\\\\lista_tareas\\\\src\\\\App\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { Encabezado } from '../Encabezado/';\nimport { BarraBusqueda } from '../BarraBusqueda/';\nimport { ListaTareas } from '../ListaTareas/';\nimport { Tarea } from '../Tarea/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const tareasDefault = [{\n    texto: \"Tarea 1 XX\",\n    completada: false\n  }, {\n    texto: \"Tarea 2 XX\",\n    completada: false\n  }, {\n    texto: \"Tarea 3\",\n    completada: true\n  }];\n  const tareasCompletadas = tareasDefault.filter(tarea => tarea.completada).length;\n  const totalTareas = tareasDefault.length;\n  const miListaTareas = 'MI_LISTA_TAREAS';\n  const almacenamientoLocal = localStorage.getItem(miListaTareas);\n  let tareasGuardadas;\n\n  if (!almacenamientoLocal) {\n    const tareasSerializadas = JSON.stringify(tareasDefault);\n    localStorage.setItem(miListaTareas, tareasSerializadas);\n    tareasGuardadas = tareasDefault;\n  } else {\n    tareasGuardadas = JSON.parse(almacenamientoLocal);\n  } //Hooks de React para interactuar con el DOM\n\n\n  const [tareas, setTareas] = React.useState(tareasGuardadas);\n  const [valorBuscado, buscarTarea] = React.useState(''); //Comportamientos de busqueda\n\n  let tareasBuscadas = [];\n\n  if (valorBuscado.length <= 0) {\n    tareasBuscadas = tareas;\n  } else {\n    tareasBuscadas = tareas.filter(tarea => {\n      const textoTarea = tarea.texto.toLowerCase();\n      const textoBuscado = valorBuscado.toLowerCase();\n      return textoTarea.includes(textoBuscado);\n    });\n  }\n\n  const guardar = tareas => {\n    if (tareas.length <= 0) {\n      localStorage.removeItem(miListaTareas);\n    } else {\n      const nuevasTareas = JSON.stringify(tareas);\n      localStorage.setItem(miListaTareas, nuevasTareas);\n    }\n  };\n\n  const completar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista[indice].completada = !nuevaLista[indice].completada;\n    setTareas(nuevaLista);\n  };\n\n  const borrar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista.splice(indice, 1);\n    setTareas(nuevaLista);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Encabezado, {\n      completadas: tareasCompletadas,\n      total: totalTareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarraBusqueda, {\n      valorBusqueda: valorBuscado,\n      funcionBuscar: buscarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n      children: tareasBuscadas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        texto: tarea.texto,\n        completada: tarea.completada,\n        onComplete: () => completar(tarea.texto),\n        onDelete: () => borrar(tarea.texto)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LRrbHijDrRqsDzMnQENI5TbQcEM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Orlando/Documents/ProyectoHaroldBolanosReact/lista_tareas/src/App/index.js"],"names":["React","Encabezado","BarraBusqueda","ListaTareas","Tarea","App","tareasDefault","texto","completada","tareasCompletadas","filter","tarea","length","totalTareas","miListaTareas","almacenamientoLocal","localStorage","getItem","tareasGuardadas","tareasSerializadas","JSON","stringify","setItem","parse","tareas","setTareas","useState","valorBuscado","buscarTarea","tareasBuscadas","textoTarea","toLowerCase","textoBuscado","includes","guardar","removeItem","nuevasTareas","completar","indice","findIndex","nuevaLista","borrar","splice","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA2B,iBAA3B;AACA,SAASC,KAAT,QAAsB,WAAtB;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAMC,aAAa,GAAG,CACpB;AAACC,IAAAA,KAAK,EAAE,YAAR;AAAsBC,IAAAA,UAAU,EAAE;AAAlC,GADoB,EAEpB;AAACD,IAAAA,KAAK,EAAE,YAAR;AAAsBC,IAAAA,UAAU,EAAE;AAAlC,GAFoB,EAGpB;AAACD,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,UAAU,EAAE;AAA/B,GAHoB,CAAtB;AAMA,QAAMC,iBAAiB,GAAGH,aAAa,CAACI,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACH,UAApC,EAAgDI,MAA1E;AACA,QAAMC,WAAW,GAAGP,aAAa,CAACM,MAAlC;AAEA,QAAME,aAAa,GAAG,iBAAtB;AACA,QAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqBH,aAArB,CAA5B;AACA,MAAII,eAAJ;;AACA,MAAG,CAACH,mBAAJ,EAAwB;AACtB,UAAMI,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAef,aAAf,CAA3B;AACAU,IAAAA,YAAY,CAACM,OAAb,CAAqBR,aAArB,EAAoCK,kBAApC;AACAD,IAAAA,eAAe,GAAGZ,aAAlB;AACD,GAJD,MAIK;AACHY,IAAAA,eAAe,GAAGE,IAAI,CAACG,KAAL,CAAWR,mBAAX,CAAlB;AACD,GAnBW,CAsBZ;;;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBzB,KAAK,CAAC0B,QAAN,CAAeR,eAAf,CAA5B;AACA,QAAM,CAACS,YAAD,EAAeC,WAAf,IAA8B5B,KAAK,CAAC0B,QAAN,CAAe,EAAf,CAApC,CAxBY,CA0BZ;;AACA,MAAIG,cAAc,GAAG,EAArB;;AACA,MAAGF,YAAY,CAACf,MAAb,IAAqB,CAAxB,EAA0B;AACxBiB,IAAAA,cAAc,GAAGL,MAAjB;AACD,GAFD,MAEK;AACHK,IAAAA,cAAc,GAAGL,MAAM,CAACd,MAAP,CACfC,KAAK,IAAI;AACP,YAAMmB,UAAU,GAAGnB,KAAK,CAACJ,KAAN,CAAYwB,WAAZ,EAAnB;AACA,YAAMC,YAAY,GAAGL,YAAY,CAACI,WAAb,EAArB;AACA,aAAOD,UAAU,CAACG,QAAX,CAAoBD,YAApB,CAAP;AACD,KALc,CAAjB;AAOD;;AAED,QAAME,OAAO,GAAIV,MAAD,IAAU;AACxB,QAAGA,MAAM,CAACZ,MAAP,IAAgB,CAAnB,EAAqB;AACnBI,MAAAA,YAAY,CAACmB,UAAb,CAAwBrB,aAAxB;AACD,KAFD,MAEK;AACH,YAAMsB,YAAY,GAAGhB,IAAI,CAACC,SAAL,CAAeG,MAAf,CAArB;AACAR,MAAAA,YAAY,CAACM,OAAb,CAAqBR,aAArB,EAAoCsB,YAApC;AACD;AACF,GAPD;;AAQA,QAAMC,SAAS,GAAI9B,KAAD,IAAW;AAC3B,UAAM+B,MAAM,GAAGd,MAAM,CAACe,SAAP,CAAiB5B,KAAK,IAAIA,KAAK,CAACJ,KAAN,IAAeA,KAAzC,CAAf;AACA,UAAMiC,UAAU,GAAG,CAAC,GAAGhB,MAAJ,CAAnB;AACAgB,IAAAA,UAAU,CAACF,MAAD,CAAV,CAAmB9B,UAAnB,GAAgC,CAACgC,UAAU,CAACF,MAAD,CAAV,CAAmB9B,UAApD;AACAiB,IAAAA,SAAS,CAACe,UAAD,CAAT;AACF,GALA;;AAOD,QAAMC,MAAM,GAAIlC,KAAD,IAAU;AACxB,UAAM+B,MAAM,GAAGd,MAAM,CAACe,SAAP,CAAiB5B,KAAK,IAAIA,KAAK,CAACJ,KAAN,IAAeA,KAAzC,CAAf;AACA,UAAMiC,UAAU,GAAG,CAAC,GAAGhB,MAAJ,CAAnB;AACAgB,IAAAA,UAAU,CAACE,MAAX,CAAkBJ,MAAlB,EAA0B,CAA1B;AACAb,IAAAA,SAAS,CAACe,UAAD,CAAT;AACD,GALA;;AAUC,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACA,MAAA,WAAW,EAAE/B,iBADb;AAEA,MAAA,KAAK,EAAEI;AAFP;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AACA,MAAA,aAAa,EAAEc,YADf;AAEA,MAAA,aAAa,EAAEC;AAFf;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,WAAD;AAAA,gBACCC,cAAc,CAACc,GAAf,CAAmBhC,KAAK,iBACvB,QAAC,KAAD;AACA,QAAA,KAAK,EAAEA,KAAK,CAACJ,KADb;AAEA,QAAA,UAAU,EAAEI,KAAK,CAACH,UAFlB;AAGA,QAAA,UAAU,EAAE,MAAI6B,SAAS,CAAC1B,KAAK,CAACJ,KAAP,CAHzB;AAIA,QAAA,QAAQ,EAAE,MAAIkC,MAAM,CAAC9B,KAAK,CAACJ,KAAP;AAJpB;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAxFQF,G;;KAAAA,G;AA0FT,eAAeA,GAAf","sourcesContent":["import './App.css'\nimport React from 'react'\nimport { Encabezado } from '../Encabezado/'\nimport { BarraBusqueda } from '../BarraBusqueda/'\nimport { ListaTareas} from '../ListaTareas/'\nimport { Tarea } from '../Tarea/'\n\nfunction App(){\n  const tareasDefault = [\n    {texto: \"Tarea 1 XX\", completada: false},\n    {texto: \"Tarea 2 XX\", completada: false},\n    {texto: \"Tarea 3\", completada: true}\n  ]\n\n  const tareasCompletadas = tareasDefault.filter(tarea => tarea.completada).length\n  const totalTareas = tareasDefault.length\n\n  const miListaTareas = 'MI_LISTA_TAREAS'\n  const almacenamientoLocal = localStorage.getItem(miListaTareas)\n  let tareasGuardadas \n  if(!almacenamientoLocal){\n    const tareasSerializadas = JSON.stringify(tareasDefault)\n    localStorage.setItem(miListaTareas, tareasSerializadas)\n    tareasGuardadas = tareasDefault\n  }else{\n    tareasGuardadas = JSON.parse(almacenamientoLocal)\n  }\n\n\n  //Hooks de React para interactuar con el DOM\n  const [tareas, setTareas] = React.useState(tareasGuardadas)\n  const [valorBuscado, buscarTarea] = React.useState('')\n\n  //Comportamientos de busqueda\n  let tareasBuscadas = []\n  if(valorBuscado.length<=0){\n    tareasBuscadas = tareas\n  }else{\n    tareasBuscadas = tareas.filter(\n      tarea => {\n        const textoTarea = tarea.texto.toLowerCase()\n        const textoBuscado = valorBuscado.toLowerCase()\n        return textoTarea.includes(textoBuscado)\n      }\n    )\n  }\n\n  const guardar = (tareas)=>{\n    if(tareas.length <=0){\n      localStorage.removeItem(miListaTareas)\n    }else{\n      const nuevasTareas = JSON.stringify(tareas)\n      localStorage.setItem(miListaTareas, nuevasTareas)\n    }\n  }\n  const completar = (texto) => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto)\n    const nuevaLista = [...tareas]\n    nuevaLista[indice].completada = !nuevaLista[indice].completada\n    setTareas(nuevaLista)\n }\n\n const borrar = (texto) =>{\n  const indice = tareas.findIndex(tarea => tarea.texto == texto)\n  const nuevaLista = [...tareas]\n  nuevaLista.splice(indice, 1)\n  setTareas(nuevaLista)\n}\n\n\n\n\n  return(\n    <React.Fragment>\n      <Encabezado\n      completadas={tareasCompletadas}\n      total={totalTareas}\n      />\n      <BarraBusqueda\n      valorBusqueda={valorBuscado}\n      funcionBuscar={buscarTarea}\n      />\n      <ListaTareas>\n      {tareasBuscadas.map(tarea =>(\n        <Tarea\n        texto={tarea.texto}\n        completada={tarea.completada}\n        onComplete={()=>completar(tarea.texto)}\n        onDelete={()=>borrar(tarea.texto)}\n        />\n      ))}\n      </ListaTareas>\n      </React.Fragment>\n  )\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}