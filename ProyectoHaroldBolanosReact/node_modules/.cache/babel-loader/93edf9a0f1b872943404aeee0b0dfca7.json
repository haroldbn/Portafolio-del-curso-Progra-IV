{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orlando\\\\Documents\\\\ProyectoHaroldBolanosReact\\\\lista_tareas\\\\src\\\\App\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { Encabezado } from '../Encabezado';\nimport { BarraBusqueda } from '../BarraBusqueda';\nimport { ListaTareas } from '../ListaTareas';\nimport { Tarea } from '../Tarea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const tareasDefault = [{\n    texto: \"Tarea 1 XX\",\n    completada: false\n  }, {\n    texto: \"Tarea 2 XX\",\n    completada: false\n  }, {\n    texto: \"Tarea 3\",\n    completada: true\n  }];\n  const tareasCompletadas = tareasDefault.filter(tarea => tarea.completada).length;\n  const totalTareas = tareasDefault.length; //Hooks de React para interactuar con el DOM\n\n  const [valorBuscado, buscarTarea] = React.useState(''); //Comportamientos de busqueda\n\n  let tareasBuscadas = [];\n\n  if (valorBuscado.length <= 0) {\n    tareasBuscadas = tareasDefault;\n  } else {\n    tareasBuscadas = tareasDefault.filter(tarea => {\n      const textoTarea = tarea.texto.toLowerCase();\n      const textoBuscado = valorBuscado.toLowerCase();\n      return textoTarea.includes(textoBuscado);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Encabezado, {\n      completadas: tareasCompletadas,\n      total: totalTareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarraBusqueda, {\n      valorBusqueda: valorBuscado,\n      funcionBuscar: buscarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n      children: tareasBuscadas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        texto: tarea.texto,\n        completada: tarea.completada,\n        onComplete: () => completar(tarea.texto),\n        onDelete: () => borrar(tarea.texto)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n  const miListaTareas = 'MI_LISTA_TAREAS';\n  const almacenamientoLocal = localStorage.getItem(miListaTareas);\n  let tareasGuardadas;\n\n  if (!almacenamientoLocal) {\n    const tareasSerializadas = JSON.stringify(tareasDefault);\n    localStorage.setItem(miListaTareas, tareasSerializadas);\n    tareasGuardadas = tareasDefault;\n  } else {\n    tareasGuardadas = JSON.parse(almacenamientoLocal);\n  }\n\n  const guardar = tareas => {\n    if (tareas.length <= 0) {\n      localStorage.removeItem(miListaTareas);\n    } else {\n      const nuevasTareas = JSON.stringify(tareas);\n      localStorage.setItem(miListaTareas, nuevasTareas);\n    }\n  }; //Hooks de React para interactuar con el DOM\n\n\n  const [tareas, setTareas] = React.useState(tareasDefault); //const [valorBuscado, buscarTarea] = React.useState('')\n  //Comportamiente de busqueda\n  //let tareasBuscadas = []\n\n  if (valorBuscado.length <= 0) {\n    tareasBuscadas = tareas;\n  } else {\n    tareasBuscadas = tareas.filter(tarea => {\n      const textoArea = tarea.texto.toLowerCase();\n      const textoBuscado = valorBuscado.toLowerCase();\n      return textoTarea.includes(textoBuscado);\n    });\n  }\n\n  const completar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista[indice].completada = !nuevaLista[indice].completada;\n    setTareas(nuevaLista);\n  };\n\n  const borrar = texto => {\n    const indice = tareas.findIndex(tarea => tarea.texto == texto);\n    const nuevaLista = [...tareas];\n    nuevaLista.splice(indice, 1);\n    setTareas(nuevaLista);\n  };\n}\n\n_s(App, \"U6+vHdJO2Mv3rnOT08Aa16+ZXmI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Orlando/Documents/ProyectoHaroldBolanosReact/lista_tareas/src/App/index.js"],"names":["React","Encabezado","BarraBusqueda","ListaTareas","Tarea","App","tareasDefault","texto","completada","tareasCompletadas","filter","tarea","length","totalTareas","valorBuscado","buscarTarea","useState","tareasBuscadas","textoTarea","toLowerCase","textoBuscado","includes","map","completar","borrar","miListaTareas","almacenamientoLocal","localStorage","getItem","tareasGuardadas","tareasSerializadas","JSON","stringify","setItem","parse","guardar","tareas","removeItem","nuevasTareas","setTareas","textoArea","indice","findIndex","nuevaLista","splice"],"mappings":"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","sourcesContent":["import './App.css'\nimport React from 'react'\nimport { Encabezado } from '../Encabezado'\nimport { BarraBusqueda } from '../BarraBusqueda'\nimport { ListaTareas} from '../ListaTareas'\nimport { Tarea } from '../Tarea'\n\nfunction App(){\n  const tareasDefault = [\n    {texto: \"Tarea 1 XX\", completada: false},\n    {texto: \"Tarea 2 XX\", completada: false},\n    {texto: \"Tarea 3\", completada: true}\n  ]\n\n  const tareasCompletadas = tareasDefault.filter(tarea => tarea.completada).length\n  const totalTareas = tareasDefault.length\n\n  //Hooks de React para interactuar con el DOM\n  const [valorBuscado, buscarTarea] = React.useState('')\n\n  //Comportamientos de busqueda\n  let tareasBuscadas = []\n  if(valorBuscado.length<=0){\n    tareasBuscadas = tareasDefault\n  }else{\n    tareasBuscadas = tareasDefault.filter(\n      tarea => {\n        const textoTarea = tarea.texto.toLowerCase()\n        const textoBuscado = valorBuscado.toLowerCase()\n        return textoTarea.includes(textoBuscado)\n      }\n    )\n  }\n  return(\n    <React.Fragment>\n      <Encabezado\n      completadas={tareasCompletadas}\n      total={totalTareas}\n      />\n      <BarraBusqueda\n      valorBusqueda={valorBuscado}\n      funcionBuscar={buscarTarea}\n      />\n      <ListaTareas>\n      {tareasBuscadas.map(tarea =>(\n        <Tarea\n        texto={tarea.texto}\n        completada={tarea.completada}\n        onComplete={()=>completar(tarea.texto)}\n        onDelete={()=>borrar(tarea.texto)}\n        />\n      ))}\n      </ListaTareas>\n      </React.Fragment>\n  )\n\n\n  const miListaTareas = 'MI_LISTA_TAREAS'\n  const almacenamientoLocal = localStorage.getItem(miListaTareas)\n  let tareasGuardadas \n  if(!almacenamientoLocal){\n    const tareasSerializadas = JSON.stringify(tareasDefault)\n    localStorage.setItem(miListaTareas, tareasSerializadas)\n    tareasGuardadas = tareasDefault\n  }else{\n    tareasGuardadas = JSON.parse(almacenamientoLocal)\n  }\n\n  const guardar = (tareas)=>{\n    if(tareas.length <=0){\n      localStorage.removeItem(miListaTareas)\n    }else{\n      const nuevasTareas = JSON.stringify(tareas)\n      localStorage.setItem(miListaTareas, nuevasTareas)\n    }\n  }\n\n\n  //Hooks de React para interactuar con el DOM\n  const [tareas, setTareas] = React.useState(tareasDefault)\n  //const [valorBuscado, buscarTarea] = React.useState('')\n\n  //Comportamiente de busqueda\n  //let tareasBuscadas = []\n  if(valorBuscado.length<=0){\n    tareasBuscadas = tareas\n  }else{\n    tareasBuscadas = tareas.filter(\n      tarea => {\n        const textoArea = tarea.texto.toLowerCase()\n        const textoBuscado = valorBuscado.toLowerCase()\n        return textoTarea.includes(textoBuscado)\n      }\n    )\n  }\n\n  const completar = (texto) => {\n     const indice = tareas.findIndex(tarea => tarea.texto == texto)\n     const nuevaLista = [...tareas]\n     nuevaLista[indice].completada = !nuevaLista[indice].completada\n     setTareas(nuevaLista)\n  }\n\n  const borrar = (texto) =>{\n    const indice = tareas.findIndex(tarea => tarea.texto == texto)\n    const nuevaLista = [...tareas]\n    nuevaLista.splice(indice, 1)\n    setTareas(nuevaLista)\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}