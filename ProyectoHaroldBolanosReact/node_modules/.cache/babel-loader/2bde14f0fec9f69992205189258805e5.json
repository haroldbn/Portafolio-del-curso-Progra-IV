{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nfunction useGetBtc() {\n  _s();\n\n  const [data, obtenerData] = React.useState(null);\n\n  const consultar = async () => {\n    const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json');\n    const respuesta = await peticion.json();\n    obtenerData(respuesta);\n  };\n\n  React.useEffect(() => {\n    try {\n      consultar();\n      setBtc(data.bpi.USD.rate);\n      setError(null);\n    } catch (error) {\n      setError(\"Por favor recargue la pagina para ver el precio del BTC\");\n      setBtc(null);\n    }\n  });\n  return {\n    btc,\n    error\n  };\n}\n\n_s(useGetBtc, \"DVsll8/bw6XTzNnceTi8II54wtc=\");\n\nexport { useGetBtc };","map":{"version":3,"sources":["C:/Users/Orlando/Desktop/Proyecto Harold Bolanos React/ProyectoHaroldBolanosReact/lista_tareas/src/Context/useGetBtc.js"],"names":["React","useGetBtc","data","obtenerData","useState","consultar","peticion","fetch","respuesta","json","useEffect","setBtc","bpi","USD","rate","setError","error","btc"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA5B;;AAEA,QAAMC,SAAS,GAAG,YAAW;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,UAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAN,IAAAA,WAAW,CAACK,SAAD,CAAX;AACD,GAJD;;AAMAR,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAI;AAClB,QAAG;AACDL,MAAAA,SAAS;AACTM,MAAAA,MAAM,CAACT,IAAI,CAACU,GAAL,CAASC,GAAT,CAAaC,IAAd,CAAN;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAJD,CAIC,OAAMC,KAAN,EAAY;AACXD,MAAAA,QAAQ,CAAC,yDAAD,CAAR;AACAJ,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,GATD;AAWF,SAAM;AACJM,IAAAA,GADI;AAEJD,IAAAA;AAFI,GAAN;AAID;;GAxBQf,S;;AA0BT,SAASA,SAAT","sourcesContent":["import React from \"react\"\r\n\r\nfunction useGetBtc(){\r\n    const [data, obtenerData] = React.useState(null)\r\n\r\n    const consultar = async() => {\r\n      const peticion = await fetch('http://api.coindesk.com/v1/bpi/currentprice.json')\r\n      const respuesta = await peticion.json()\r\n      obtenerData(respuesta)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n      try{\r\n        consultar()\r\n        setBtc(data.bpi.USD.rate)\r\n        setError(null)\r\n      }catch(error){\r\n        setError(\"Por favor recargue la pagina para ver el precio del BTC\")\r\n        setBtc(null)\r\n      }\r\n    })\r\n\r\n  return{\r\n    btc,\r\n    error\r\n  }\r\n}\r\n\r\nexport { useGetBtc }"]},"metadata":{},"sourceType":"module"}